# Generated by Django 5.0.4 on 2025-03-31 18:18

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Forum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('body', models.TextField(verbose_name='Body')),
                ('view_count', models.PositiveIntegerField(default=0, help_text='Number of times the forum has been viewed')),
                ('is_approved', models.BooleanField(default=False, help_text='Indicates if the forum has been approved by a moderator')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the forum was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the forum was last updated')),
                ('is_deleted', models.BooleanField(default=False, help_text='Flag indicating if the forum is deleted')),
                ('approved_by', models.ForeignKey(blank=True, help_text='Moderator who approved this forum', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_forums', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(help_text='User who created the forum', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'forum',
                'verbose_name_plural': 'forums',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(verbose_name='Body')),
                ('is_approved', models.BooleanField(default=False, help_text='Indicates if the reply has been approved by a moderator')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the reply was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the reply was last updated')),
                ('is_deleted', models.BooleanField(default=False, help_text='Flag indicating if the reply is deleted')),
                ('approved_by', models.ForeignKey(blank=True, help_text='Moderator who approved this reply', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_replies', to=settings.AUTH_USER_MODEL)),
                ('forum', models.ForeignKey(help_text='Forum to which this reply belongs', on_delete=django.db.models.deletion.CASCADE, to='community.forum')),
                ('parent', models.ForeignKey(blank=True, help_text='Parent reply for threaded discussions', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='community.reply')),
                ('user', models.ForeignKey(help_text='User who posted the reply', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'reply',
                'verbose_name_plural': 'replies',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ld_value', models.BooleanField(default=False, help_text='Boolean value for like/dislike, if applicable')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the like was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the like was last updated')),
                ('user', models.ForeignKey(help_text='User who liked the reply', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('reply', models.ForeignKey(help_text='Reply that was liked', on_delete=django.db.models.deletion.CASCADE, to='community.reply')),
            ],
            options={
                'verbose_name': 'like',
                'verbose_name_plural': 'likes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='forum',
            index=models.Index(fields=['created_at'], name='community_f_created_4bdabe_idx'),
        ),
        migrations.AddIndex(
            model_name='forum',
            index=models.Index(fields=['user'], name='community_f_user_id_b851a3_idx'),
        ),
        migrations.AddIndex(
            model_name='reply',
            index=models.Index(fields=['created_at'], name='community_r_created_89c7ca_idx'),
        ),
        migrations.AddIndex(
            model_name='reply',
            index=models.Index(fields=['forum'], name='community_r_forum_i_d01166_idx'),
        ),
        migrations.AddIndex(
            model_name='like',
            index=models.Index(fields=['created_at'], name='community_l_created_786f0e_idx'),
        ),
        migrations.AddIndex(
            model_name='like',
            index=models.Index(fields=['user'], name='community_l_user_id_3c66ea_idx'),
        ),
        migrations.AddConstraint(
            model_name='like',
            constraint=models.UniqueConstraint(fields=('user', 'reply'), name='unique_like'),
        ),
    ]

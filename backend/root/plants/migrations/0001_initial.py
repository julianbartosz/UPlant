# Generated by Django 5.0.4 on 2025-03-31 18:18

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('api_id', models.IntegerField(blank=True, help_text='ID from external API, if available', null=True, unique=True)),
                ('common_name', models.CharField(blank=True, help_text='Common name of the plant (if available)', max_length=255, null=True)),
                ('slug', models.SlugField(help_text='Unique human-readable identifier', unique=True)),
                ('scientific_name', models.CharField(max_length=255)),
                ('rank', models.CharField(choices=[('species', 'Species'), ('ssp', 'Subspecies'), ('var', 'Variety'), ('form', 'Form'), ('hybrid', 'Hybrid'), ('subvar', 'Subvariety')], help_text='Taxonomic rank of the plant', max_length=20)),
                ('family_common_name', models.CharField(blank=True, help_text='Common name of the plant family (if available)', max_length=255, null=True)),
                ('family', models.CharField(help_text='Scientific name of the plant family', max_length=255)),
                ('genus_id', models.IntegerField(help_text='ID of the plant genus')),
                ('genus', models.CharField(help_text='Scientific name of the plant genus', max_length=255)),
                ('image_url', models.URLField(blank=True, help_text='Primary image URL for the plant', null=True)),
                ('synonyms', models.JSONField(blank=True, help_text='List of synonym names (as a JSON array)', null=True)),
                ('vegetable', models.BooleanField(default=False, help_text='Is the plant classified as a vegetable?')),
                ('duration', models.JSONField(blank=True, help_text='Plant duration(s) (e.g., annual, biennial, perennial)', null=True)),
                ('edible', models.BooleanField(default=False, help_text='Is the plant edible?')),
                ('edible_part', models.JSONField(blank=True, help_text='Edible parts of the plant (e.g., roots, leaves, fruits)', null=True)),
                ('flower_color', models.JSONField(blank=True, help_text="Flower color(s) (e.g., ['red', 'yellow'])", null=True)),
                ('flower_conspicuous', models.BooleanField(default=False, help_text='Are the flowers visually prominent?', null=True)),
                ('foliage_texture', models.CharField(blank=True, help_text='Texture of the foliage (e.g., fine, medium, coarse)', max_length=50, null=True)),
                ('foliage_color', models.JSONField(blank=True, help_text="Foliage color(s) (e.g., ['green', 'grey'])", null=True)),
                ('foliage_retention', models.BooleanField(default=False, help_text='Does the plant retain its foliage all year?', null=True)),
                ('fruit_or_seed_conspicuous', models.BooleanField(default=False, help_text='Are the fruits or seeds visually prominent?', null=True)),
                ('fruit_or_seed_color', models.JSONField(blank=True, help_text="Fruit or seed color(s) (e.g., ['red', 'orange'])", null=True)),
                ('fruit_or_seed_shape', models.CharField(blank=True, help_text='Shape of the fruit or seed', max_length=50, null=True)),
                ('fruit_or_seed_persistence', models.BooleanField(default=False, help_text='Do the fruits/seeds remain on the plant persistently?', null=True)),
                ('row_spacing_cm', models.DecimalField(blank=True, decimal_places=3, help_text='Minimum spacing between rows (cm)', max_digits=6, null=True)),
                ('spread_cm', models.DecimalField(blank=True, decimal_places=3, help_text='Average plant spread (cm)', max_digits=7, null=True)),
                ('detailed_description', models.TextField(blank=True, help_text='Full description and care guide for the plant', null=True)),
                ('care_instructions', models.TextField(blank=True, help_text='Care instructions (watering, fertilization, pruning, etc.)', null=True)),
                ('watering_interval', models.PositiveIntegerField(blank=True, help_text='Recommended days between watering', null=True)),
                ('sunlight_requirements', models.CharField(blank=True, help_text="E.g., 'Full sun', 'Partial shade'", max_length=100, null=True)),
                ('soil_type', models.CharField(blank=True, help_text='Preferred soil type (e.g., well-draining loam)', max_length=100, null=True)),
                ('min_temperature', models.IntegerField(blank=True, help_text='Minimum tolerable temperature (°C)', null=True)),
                ('max_temperature', models.IntegerField(blank=True, help_text='Maximum tolerable temperature (°C)', null=True)),
                ('nutrient_requirements', models.TextField(blank=True, help_text='Notes on fertilizer or nutrient needs', null=True)),
                ('maintenance_notes', models.TextField(blank=True, help_text='Additional maintenance or care notes', null=True)),
                ('days_to_harvest', models.DecimalField(blank=True, decimal_places=2, help_text='Average number of days from planting to harvest', max_digits=4, null=True)),
                ('sowing', models.TextField(blank=True, help_text='Instructions on how to sow the plant', null=True)),
                ('ph_minimum', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum acceptable soil pH', max_digits=4, null=True)),
                ('ph_maximum', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum acceptable soil pH', max_digits=4, null=True)),
                ('light', models.PositiveIntegerField(blank=True, help_text='Required amount of light (scale 0-10)', null=True)),
                ('atmospheric_humidity', models.PositiveIntegerField(blank=True, help_text='Required relative atmospheric humidity (scale 0-10)', null=True)),
                ('minimum_precipitation', models.PositiveIntegerField(blank=True, help_text='Minimum annual precipitation in mm', null=True)),
                ('maximum_precipitation', models.PositiveIntegerField(blank=True, help_text='Maximum annual precipitation in mm', null=True)),
                ('minimum_root_depth', models.PositiveIntegerField(blank=True, help_text='Minimum root depth required (cm)', null=True)),
                ('growth_months', models.JSONField(blank=True, help_text='Active growth months (list of month abbreviations)', null=True)),
                ('bloom_months', models.JSONField(blank=True, help_text='Months in which the plant typically blooms', null=True)),
                ('fruit_months', models.JSONField(blank=True, help_text='Months when the plant produces fruits', null=True)),
                ('growth_rate', models.CharField(blank=True, help_text="Description of the plant's growth rate (e.g., 'Rapid')", max_length=50, null=True)),
                ('average_height', models.PositiveIntegerField(blank=True, help_text='Average plant height (cm)', null=True)),
                ('maximum_height', models.PositiveIntegerField(blank=True, help_text='Maximum plant height (cm)', null=True)),
                ('toxicity', models.CharField(blank=True, help_text="Level of toxicity (e.g., 'none', 'low', etc.)", max_length=50, null=True)),
                ('is_user_created', models.BooleanField(default=False, help_text='Indicates if this record was created by a user')),
                ('is_verified', models.BooleanField(default=False, help_text='For user-submitted records, whether it has been verified by an admin')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this plant record', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
